---
- name: Detect OS family
  set_fact:
    is_ubuntu: "{{ ansible_os_family == 'Debian' }}"
    is_macos: "{{ ansible_os_family == 'Darwin' }}"

- name: Install Docker (Ubuntu)
  block:
    - name: Install prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
  when: is_ubuntu

- name: Install Docker (MacOS)
  homebrew_cask:
    name: docker
    state: present
  when: is_macos

- name: Install Docker Compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture | lower }}"
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  when: is_ubuntu

- name: Add user to docker group (Ubuntu)
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  when: is_ubuntu

- name: Set permissions on docker.sock
  file:
    path: /var/run/docker.sock
    mode: '0666'
    state: file
  when: is_ubuntu

- name: Ensure Docker service is running
  service:
    name: docker
    state: restarted
    enabled: yes
  when: is_ubuntu

- name: Reset connection to apply group changes
  meta: reset_connection
  when: is_ubuntu

- name: Wait for Docker socket to be accessible
  wait_for:
    path: /var/run/docker.sock
    state: present
    timeout: 30
  when: is_ubuntu